/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package laboratorium.krilek;

import org.easymock.EasyMockExtension;
import org.easymock.MockType;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;

import static org.easymock.EasyMock.expect;
import static org.easymock.EasyMock.mock;
import static org.easymock.EasyMock.replay;
import static org.easymock.EasyMock.verify;
import java.util.ArrayList;

import static org.junit.jupiter.api.Assertions.*;

@ExtendWith(EasyMockExtension.class)
class LibraryTest {
    @Test
    void strictMock() {
        ArrayList<Integer> mockList = mock(MockType.STRICT, ArrayList.class);
        expect(mockList.add(10)).andReturn(true);
        expect(mockList.add(20)).andReturn(true);
        expect(mockList.size()).andReturn(2);
        expect(mockList.get(0)).andReturn(10);
        replay(mockList);

        mockList.add(10);
        mockList.add(20);
        assertEquals(mockList.size(), 2);
        assertEquals(10, (int) mockList.get(0));

        verify(mockList);
    }
    @Test
    public void niceMock() {
        ArrayList<Integer> mockList = mock(MockType.NICE, ArrayList.class);
        expect(mockList.add(10)).andReturn(true);
        expect(mockList.size()).andReturn(2);
        expect(mockList.get(0)).andReturn(10);
        replay(mockList);
        mockList.add(10);
        // Not in setup list call - Nice mock, allowed
        boolean b = mockList.add(30);
        assertFalse(b);
        assertEquals(mockList.size(), 2);
        assertEquals(10, (int) mockList.get(0));
        // Should not throw exception
        verify(mockList);
    }

    @Test
    public void defaultMock() {
        ArrayList<Integer> mockList = mock(ArrayList.class);
        expect(mockList.add(10)).andReturn(true);
        expect(mockList.size()).andReturn(2);
        expect(mockList.get(0)).andReturn(10);
        replay(mockList);
        assertEquals(10, (int) mockList.get(0));
        assertTrue(mockList.add(10));
        assertEquals(2, (int) mockList.size());
        verify(mockList);
    }
}
