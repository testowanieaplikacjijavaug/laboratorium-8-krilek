/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package laboratorium.krilek;

import org.easymock.EasyMockExtension;
import org.easymock.MockType;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;


import static org.easymock.EasyMock.*;
import static org.junit.jupiter.api.Assertions.*;

@ExtendWith(EasyMockExtension.class)
class VerifyVsAssertTest {

    @Test
    public void withoutVerify() {
        // We want to test Value2 method.
        ISampleClass mock = mock(MockType.NICE,ISampleClass.class);
        expect(mock.Value2()).andReturn(2);
        expect(mock.Value3()).andReturn(2);
        replay(mock);
        //Intended Error
        assertEquals(2, mock.Value3());
        // We wont notice error
    }

    @Test
    public void withVerify() {
        // We want to test Value2 method.
        ISampleClass mock = mock(ISampleClass.class);
        expect(mock.Value2()).andReturn(3);
        expect(mock.Value3()).andReturn(3);
        replay(mock);

        assertEquals(3, mock.Value3());

        // Not called method Value2 will show up in results as fail
        // because verify checks if all methods were called.
        // assertThrows to make test pass
        assertThrows(AssertionError.class, () ->{
            verify(mock);
        });
    }
}
